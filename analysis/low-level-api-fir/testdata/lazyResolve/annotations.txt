
RAW_FIR:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @Suppress(LAZY_EXPRESSION) public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

IMPORTS:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @Suppress(LAZY_EXPRESSION) public? final? [ResolvedTo(RAW_FIR)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

COMPILER_REQUIRED_ANNOTATIONS:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @Suppress(LAZY_EXPRESSION) public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

COMPANION_GENERATION:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @Suppress(LAZY_EXPRESSION) public? final? [ResolvedTo(COMPANION_GENERATION)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

SUPER_TYPES:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @Suppress(LAZY_EXPRESSION) public? final? [ResolvedTo(SUPER_TYPES)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

TYPES:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @R|kotlin/Suppress|(LAZY_EXPRESSION) public? final? [ResolvedTo(TYPES)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

STATUS:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @R|kotlin/Suppress|(LAZY_EXPRESSION) public final [ResolvedTo(STATUS)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

ARGUMENTS_OF_ANNOTATIONS:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @R|kotlin/Suppress|(String(2)) public final [ResolvedTo(ARGUMENTS_OF_ANNOTATIONS)] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }

CONTRACTS:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @R|kotlin/Suppress|(String(2)) public final [ResolvedTo(CONTRACTS)] fun resolveMe(): R|kotlin/Unit| {
    }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: annotations.kt
    @FILE:Suppress(LAZY_EXPRESSION)
    @R|kotlin/Suppress|(String(2)) public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] fun resolveMe(): R|kotlin/Unit| {
    }

ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: annotations.kt
    @FILE:Suppress(String(1))
    @R|kotlin/Suppress|(names = vararg(String(2))) public final [ResolvedTo(ANNOTATIONS_ARGUMENTS_MAPPING)] fun resolveMe(): R|kotlin/Unit| {
    }

EXPECT_ACTUAL_MATCHING:
FILE: annotations.kt
    @FILE:Suppress(String(1))
    @R|kotlin/Suppress|(names = vararg(String(2))) public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun resolveMe(): R|kotlin/Unit| {
    }

BODY_RESOLVE:
FILE: annotations.kt
    @FILE:Suppress(String(1))
    @R|kotlin/Suppress|(names = vararg(String(2))) public final [ResolvedTo(BODY_RESOLVE)] fun resolveMe(): R|kotlin/Unit| {
    }

FILE RAW TO BODY:
FILE: annotations.kt
    @FILE:R|kotlin/Suppress|(names = vararg(String(1)))
    @R|kotlin/Suppress|(names = vararg(String(2))) public final [ResolvedTo(BODY_RESOLVE)] fun resolveMe(): R|kotlin/Unit| {
    }
