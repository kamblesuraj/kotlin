import abitestutils.abiTest

fun box() = abiTest {
    expectFailure(linkage("Constructor TopLevelClassChildOfRemovedClass.<init> can not be called: Constructor TopLevelClassChildOfRemovedClass.<init> uses unlinked class symbol /RemovedClass (through class TopLevelClassChildOfRemovedClass)")) { TopLevelClassChildOfRemovedClass() }
    expectFailure(linkage("Can not get instance of singleton TopLevelObjectChildOfRemovedClass: IR expression uses unlinked class symbol /RemovedClass (through object TopLevelObjectChildOfRemovedClass)")) { TopLevelObjectChildOfRemovedClass }
    expectFailure(linkage("Constructor <init> can not be called: Constructor <init> uses unlinked class symbol /RemovedInterface (through anonymous object)")) { object : TopLevelInterfaceChildOfRemovedInterface {} }
    expectFailure(linkage("Constructor TopLevelClassChildOfRemovedInterface.<init> can not be called: Constructor TopLevelClassChildOfRemovedInterface.<init> uses unlinked class symbol /RemovedInterface (through class TopLevelClassChildOfRemovedInterface)")) { TopLevelClassChildOfRemovedInterface() }
    expectFailure(linkage("Can not get instance of singleton TopLevelObjectChildOfRemovedInterface: IR expression uses unlinked class symbol /RemovedInterface (through object TopLevelObjectChildOfRemovedInterface)")) { TopLevelObjectChildOfRemovedInterface }
    expectFailure(linkage("Can not get instance of singleton ENTRY: IR expression uses unlinked class symbol /RemovedInterface (through enum class TopLevelEnumClassChildOfRemovedInterface)")) { TopLevelEnumClassChildOfRemovedInterface.ENTRY }
    expectFailure(linkage("Constructor NestedClassChildOfRemovedClass.<init> can not be called: Constructor NestedClassChildOfRemovedClass.<init> uses unlinked class symbol /RemovedClass (through class NestedClassChildOfRemovedClass)")) { TopLevel.NestedClassChildOfRemovedClass() }
    expectFailure(linkage("Can not get instance of singleton NestedObjectChildOfRemovedClass: IR expression uses unlinked class symbol /RemovedClass (through object NestedObjectChildOfRemovedClass)")) { TopLevel.NestedObjectChildOfRemovedClass }
    expectFailure(linkage("Constructor <init> can not be called: Constructor <init> uses unlinked class symbol /RemovedInterface (through anonymous object)")) { object : TopLevel.NestedInterfaceChildOfRemovedInterface {} }
    expectFailure(linkage("Constructor NestedClassChildOfRemovedInterface.<init> can not be called: Constructor NestedClassChildOfRemovedInterface.<init> uses unlinked class symbol /RemovedInterface (through class NestedClassChildOfRemovedInterface)")) { TopLevel.NestedClassChildOfRemovedInterface() }
    expectFailure(linkage("Can not get instance of singleton NestedObjectChildOfRemovedInterface: IR expression uses unlinked class symbol /RemovedInterface (through object NestedObjectChildOfRemovedInterface)")) { TopLevel.NestedObjectChildOfRemovedInterface }
    expectFailure(linkage("Can not get instance of singleton ENTRY: IR expression uses unlinked class symbol /RemovedInterface (through enum class NestedEnumClassChildOfRemovedInterface)")) { TopLevel.NestedEnumClassChildOfRemovedInterface.ENTRY }
    expectFailure(linkage("Constructor InnerClassChildOfRemovedClass.<init> can not be called: Constructor InnerClassChildOfRemovedClass.<init> uses unlinked class symbol /RemovedClass (through inner class InnerClassChildOfRemovedClass)")) { TopLevel().InnerClassChildOfRemovedClass() }
    expectFailure(linkage("Constructor InnerClassChildOfRemovedInterface.<init> can not be called: Constructor InnerClassChildOfRemovedInterface.<init> uses unlinked class symbol /RemovedInterface (through inner class InnerClassChildOfRemovedInterface)")) { TopLevel().InnerClassChildOfRemovedInterface() }
    expectFailure(linkage("Can not get instance of singleton TopLevelWithCompanionChildOfRemovedClass.Companion: IR expression uses unlinked class symbol /RemovedClass (through companion object TopLevelWithCompanionChildOfRemovedClass.Companion)")) { TopLevelWithCompanionChildOfRemovedClass.Companion }
    expectFailure(linkage("Can not get instance of singleton TopLevelWithCompanionChildOfRemovedInterface.Companion: IR expression uses unlinked class symbol /RemovedInterface (through companion object TopLevelWithCompanionChildOfRemovedInterface.Companion)")) { TopLevelWithCompanionChildOfRemovedInterface.Companion }
    expectFailure(linkage("Property accessor anonymousObjectChildOfRemovedClass.<get-anonymousObjectChildOfRemovedClass> can not be called: Property accessor anonymousObjectChildOfRemovedClass.<get-anonymousObjectChildOfRemovedClass> uses unlinked class symbol /RemovedClass")) { anonymousObjectChildOfRemovedClass }
    expectFailure(linkage("Property accessor anonymousObjectChildOfRemovedInterface.<get-anonymousObjectChildOfRemovedInterface> can not be called: Property accessor anonymousObjectChildOfRemovedInterface.<get-anonymousObjectChildOfRemovedInterface> uses unlinked class symbol /RemovedInterface")) { anonymousObjectChildOfRemovedInterface }
    expectFailure(linkage("Constructor <init> can not be called: Constructor <init> uses unlinked class symbol /RemovedClass (through class LocalClass)")) { topLevelFunctionWithLocalClassChildOfRemovedClass() }
    expectFailure(linkage("Constructor <init> can not be called: Constructor <init> uses unlinked class symbol /RemovedInterface (through class LocalClass)")) { topLevelFunctionWithLocalClassChildOfRemovedInterface() }
    expectFailure(linkage("Can not read value from variable anonymousObject: Variable anonymousObject uses unlinked class symbol /RemovedClass (through anonymous object)")) { topLevelFunctionWithAnonymousObjectChildOfRemovedClass() }
    expectFailure(linkage("Can not read value from variable anonymousObject: Variable anonymousObject uses unlinked class symbol /RemovedInterface (through anonymous object)")) { topLevelFunctionWithAnonymousObjectChildOfRemovedInterface() }
}
