package

public fun foo(/*0*/ some: Some): kotlin.Unit

public open class ContainerUtil {
    public constructor ContainerUtil()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    @org.jetbrains.annotations.NotNull public open fun </*0*/ T : kotlin.Any!> set(/*0*/ vararg items: T! /*(@org.jetbrains.annotations.NotNull kotlin.Array<T!>..@org.jetbrains.annotations.NotNull kotlin.Array<out T!>)*/): kotlin.collections.(Mutable)Set<T!>
}

public final class Some {
    public constructor Some()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
